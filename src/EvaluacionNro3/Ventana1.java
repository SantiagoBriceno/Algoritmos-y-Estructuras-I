/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EvaluacionNro3;

import EvaluacionNro2.*;
import javax.swing.JOptionPane;
import static EvaluacionNro2.metodosCalculadoresII.*;
import static java.lang.Integer.parseInt;

/**
 *
 * @author Santiago
 */
public class Ventana1 extends javax.swing.JPanel {

    /**
     * Creates new form Ventana1
     */

    private int i = 0;
    private Lista l1 = new Lista();

    public Ventana1() {
        initComponents();
        //iniciarMyN();
        setVisibilidad(false);
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorEnunciado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enunciado = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        consignas = new javax.swing.JTextArea();
        contenedorIngresos = new javax.swing.JPanel();
        ok = new javax.swing.JButton();
        ingreseN = new javax.swing.JLabel();
        valor = new javax.swing.JTextField();
        reiniciar = new javax.swing.JButton();
        pregunta1 = new javax.swing.JLabel();
        valorEliminar = new javax.swing.JTextField();
        pregunta2 = new javax.swing.JLabel();
        posicionEliminar = new javax.swing.JTextField();
        pregunta3 = new javax.swing.JLabel();
        mayorMenor = new javax.swing.JButton();
        menorMayor = new javax.swing.JButton();
        pregunta4 = new javax.swing.JLabel();
        Jlista = new javax.swing.JLabel();
        elemLista = new javax.swing.JTextField();

        setBackground(new java.awt.Color(201, 214, 227));
        setLayout(new java.awt.BorderLayout());

        contenedorEnunciado.setBackground(new java.awt.Color(201, 214, 227));
        contenedorEnunciado.setForeground(new java.awt.Color(201, 214, 227));

        jScrollPane1.setBorder(null);
        jScrollPane1.setOpaque(false);

        enunciado.setEditable(false);
        enunciado.setBackground(new java.awt.Color(201, 214, 227));
        enunciado.setColumns(20);
        enunciado.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        enunciado.setRows(5);
        enunciado.setText("Diseñe un programa en Java con su respectiva interfaz\ngráfica que permita ingresar números a una lista enlazada\ny efectue las siguientes operaciones\n1.- Eliminar un elemento\n2.- Obtener un elemento por su posición\n     ");
        enunciado.setBorder(null);
        jScrollPane1.setViewportView(enunciado);

        jScrollPane3.setBorder(null);

        consignas.setEditable(false);
        consignas.setBackground(new java.awt.Color(201, 214, 227));
        consignas.setColumns(20);
        consignas.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        consignas.setRows(5);
        consignas.setText("3.- Ordenar de mayor a menor\n4.- Ordenar de menor a mayor\n");
        consignas.setBorder(null);
        jScrollPane3.setViewportView(consignas);

        contenedorIngresos.setBackground(new java.awt.Color(201, 214, 227));

        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        ingreseN.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ingreseN.setText("Ingrese valores a la lista");
        ingreseN.setFocusable(false);

        valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorActionPerformed(evt);
            }
        });

        reiniciar.setText("Borrar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });

        pregunta1.setText("Ingrese el valor a eliminar");

        valorEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorEliminarActionPerformed(evt);
            }
        });

        pregunta2.setText("Ingrese la posicion a eliminar");

        posicionEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posicionEliminarActionPerformed(evt);
            }
        });

        pregunta3.setText("Ordenar de mayor a menor");

        mayorMenor.setText("Ordenar");
        mayorMenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mayorMenorActionPerformed(evt);
            }
        });

        menorMayor.setText("Ordenar");
        menorMayor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menorMayorActionPerformed(evt);
            }
        });

        pregunta4.setText("Ordenar de menor a mayor");

        Jlista.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Jlista.setText("Lista: ");

        elemLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elemListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenedorIngresosLayout = new javax.swing.GroupLayout(contenedorIngresos);
        contenedorIngresos.setLayout(contenedorIngresosLayout);
        contenedorIngresosLayout.setHorizontalGroup(
            contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorIngresosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorIngresosLayout.createSequentialGroup()
                        .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pregunta2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pregunta3)
                                .addComponent(pregunta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pregunta4))
                        .addGap(18, 18, 18)
                        .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mayorMenor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(menorMayor)
                            .addComponent(valorEliminar)
                            .addComponent(posicionEliminar))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(contenedorIngresosLayout.createSequentialGroup()
                        .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorIngresosLayout.createSequentialGroup()
                                .addComponent(ingreseN, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ok)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reiniciar))
                            .addGroup(contenedorIngresosLayout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(Jlista, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(elemLista, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 203, Short.MAX_VALUE))))
        );
        contenedorIngresosLayout.setVerticalGroup(
            contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorIngresosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ok)
                        .addComponent(ingreseN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reiniciar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pregunta1)
                    .addComponent(valorEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pregunta2)
                    .addComponent(posicionEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mayorMenor)
                    .addComponent(pregunta4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menorMayor)
                    .addComponent(pregunta3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Jlista, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(elemLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout contenedorEnunciadoLayout = new javax.swing.GroupLayout(contenedorEnunciado);
        contenedorEnunciado.setLayout(contenedorEnunciadoLayout);
        contenedorEnunciadoLayout.setHorizontalGroup(
            contenedorEnunciadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorEnunciadoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
            .addGroup(contenedorEnunciadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenedorIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        contenedorEnunciadoLayout.setVerticalGroup(
            contenedorEnunciadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorEnunciadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorEnunciadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contenedorIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(contenedorEnunciado, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorActionPerformed

    private void elemListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elemListaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elemListaActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

        if(!verificarIngreso()){
           i++;
           calculosPertinentes(i);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_okActionPerformed

    private void iniciarMyN(){
        valor.setText((int) (Math.random() * 99) + "");
    }

    private boolean verificarIngreso(){
        boolean noIngreso = false, numeroInvalido = false;
        if((valor.getText().equals(""))){
            noIngreso = true;
            //JOptionPane.showMessageDialog(pregunta1, "Ingrese los valores solicitados");
            if(ingresoNumeroValido(valor.getText()) == false || ingresoNumeroValido(elemLista.getText()) == false){
                numeroInvalido = true;
            }
        }

        if(noIngreso && numeroInvalido){
            JOptionPane.showMessageDialog(pregunta1, "Ingrese los valores solicitados en el formato solicitado");
            valor.setText("");

        }else if(noIngreso && !numeroInvalido){
            JOptionPane.showMessageDialog(pregunta1, "Ingrese los valores solicitados");
        }else if(!noIngreso && numeroInvalido){
            JOptionPane.showMessageDialog(pregunta1, "Ingrese valores enteros entre 0 y 9");
            valor.setText("");

        }

        return numeroInvalido && noIngreso;
    }

    private boolean ingresoNumeroValido(String txt) {
        boolean valido;
        if(txt.equals("")){
            valido = false;
        } else {
            valido = txt.matches("[0-9]");
        }
        return valido;


    }

    private void calculosPertinentes(int cont){

        int n = parseInt(valor.getText());
        l1.insertar(n, cont);

        elemLista.setText(l1.toString());

        valor.setText("");
        valor.requestFocus();
        reiniciar.setEnabled(true);

    }

    private void setVisibilidad(boolean visible){
        reiniciar.setEnabled(visible);




    }


    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        setVisibilidad(true);
        reinicia();
        //iniciarMyN();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void reinicia(){
        l1.vaciar();
        i = 0;
        valorEliminar.setText("");
        posicionEliminar.setText("");
        valor.setText("");
        elemLista.setText("");
        ok.setEnabled(true);
        setVisibilidad(false);


    }

    private void valorEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorEliminarActionPerformed
        int valor = parseInt(valorEliminar.getText()), pos = l1.localizar(valor);
        if(pos != -1){
            l1.eliminar(pos);
            elemLista.setText(l1.toString());
            valorEliminar.setText("");
            valorEliminar.requestFocus();
        }else{
            valorEliminar.setText("");
            valorEliminar.requestFocus();
            JOptionPane.showMessageDialog(pregunta1, "El valor ingresano no se encuentra en la Lista");

        }


        // TODO add your handling code here:
    }//GEN-LAST:event_valorEliminarActionPerformed

    private void posicionEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posicionEliminarActionPerformed
        int pos = parseInt(posicionEliminar.getText());
        if (pos != -1 && pos <= l1.longitud()) {
            l1.eliminar(pos);
            elemLista.setText(l1.toString());
            posicionEliminar.setText("");
            posicionEliminar.requestFocus();
        } else {
            posicionEliminar.setText("");
            posicionEliminar.requestFocus();
            JOptionPane.showMessageDialog(pregunta1, "El valor ingresano no se encuentra en la Lista");

        }
// TODO add your handling code here:
    }//GEN-LAST:event_posicionEliminarActionPerformed

    private void mayorMenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mayorMenorActionPerformed
        l1.ordenarLista();
        elemLista.setText(l1.toString());
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mayorMenorActionPerformed

    private void menorMayorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menorMayorActionPerformed
        l1.ordenarListaMenorMayor();
        elemLista.setText(l1.toString());
    }//GEN-LAST:event_menorMayorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Jlista;
    private javax.swing.JTextArea consignas;
    private javax.swing.JPanel contenedorEnunciado;
    private javax.swing.JPanel contenedorIngresos;
    private javax.swing.JTextField elemLista;
    private javax.swing.JTextArea enunciado;
    private javax.swing.JLabel ingreseN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mayorMenor;
    private javax.swing.JButton menorMayor;
    private javax.swing.JButton ok;
    private javax.swing.JTextField posicionEliminar;
    private javax.swing.JLabel pregunta1;
    private javax.swing.JLabel pregunta2;
    private javax.swing.JLabel pregunta3;
    private javax.swing.JLabel pregunta4;
    private javax.swing.JButton reiniciar;
    private javax.swing.JTextField valor;
    private javax.swing.JTextField valorEliminar;
    // End of variables declaration//GEN-END:variables





}
